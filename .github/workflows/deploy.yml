# GitHub Actions workflow to deploy MarkVim to GitHub Pages
name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      # Install dependencies
      - run: pnpm install
      
      # Install Playwright browsers
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      # Start the development server in background
      - name: Start development server
        run: pnpm dev &
        
      # Wait for server to be ready
      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      # Run E2E tests
      - name: Run E2E tests
        run: pnpm run test:e2e
        
      # Upload test results on failure
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cucumber-report
          path: cucumber-report.html

  build:
    runs-on: ubuntu-latest
    needs: test-e2e  # Only build if E2E tests pass
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      # Use pnpm as specified in the project
      - run: pnpm install
      - run: NUXT_APP_BASE_URL=/MarkVim/ pnpm run build --preset github_pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public

  # Deployment job
  deploy:
    # Add a dependency to both test and build jobs
    needs: [test-e2e, build]
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    # Deploy to the github_pages environment
    environment:
      name: github_pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
