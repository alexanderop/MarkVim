name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PLAYWRIGHT_BROWSERS_PATH: /home/runner/.cache/ms-playwright

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js with PNPM cache
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(pnpm list @playwright/test --depth=0 --parseable | head -1 | sed 's/.*@//')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: /home/runner/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright system dependencies only
        run: pnpm exec playwright install-deps chromium
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Cache Nuxt build
        uses: actions/cache@v4
        id: nuxt-cache
        with:
          path: |
            .nuxt
            .output
          key: nuxt-${{ runner.os }}-${{ hashFiles('**/*.vue', '**/*.ts', '**/*.js', 'nuxt.config.ts', 'package.json', 'pnpm-lock.yaml') }}
          restore-keys: |
            nuxt-${{ runner.os }}-

      - name: Build application
        run: pnpm run build
        if: steps.nuxt-cache.outputs.cache-hit != 'true'

      - name: Lint code
        run: pnpm lint

      - name: Start preview server
        run: pnpm preview &

      - name: Wait for server readiness
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'

      - name: Run E2E tests
        run: pnpm run test:e2e:ci

      - name: Publish test results
        uses: deblockt/cucumber-report-annotations-action@v1.17
        if: always()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: 'reports/*.json'
          name: 🥒 E2E Test Results
          show-global-summary-report: true
          show-number-of-error-on-check-title: true

      - name: Create job summary
        if: always()
        run: |
          echo "## 🎭 E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "reports/cucumber_report.json" ]; then
            echo "✅ Test report generated successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Reports Location:** \`reports/\`" >> $GITHUB_STEP_SUMMARY
            echo "🔗 **Full Report:** Check the artifacts section below" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No test report found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cucumber-reports
          path: reports/
