name: Test Affected Modules

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Detect which modules have changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      color-theme: ${{ steps.filter.outputs.color-theme }}
      documents: ${{ steps.filter.outputs.documents }}
      editor: ${{ steps.filter.outputs.editor }}
      markdown-preview: ${{ steps.filter.outputs.markdown-preview }}
      share: ${{ steps.filter.outputs.share }}
      layout: ${{ steps.filter.outputs.layout }}
      shortcuts: ${{ steps.filter.outputs.shortcuts }}
      core: ${{ steps.filter.outputs.core }}
      shared: ${{ steps.filter.outputs.shared }}
      app: ${{ steps.filter.outputs.app }}
      run-all: ${{ steps.check-run-all.outputs.run-all }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            color-theme:
              - 'src/modules/color-theme/**'
            documents:
              - 'src/modules/documents/**'
            editor:
              - 'src/modules/editor/**'
            markdown-preview:
              - 'src/modules/markdown-preview/**'
            share:
              - 'src/modules/share/**'
            layout:
              - 'src/modules/layout/**'
            shortcuts:
              - 'src/modules/shortcuts/**'
            core:
              - 'src/modules/core/**'
            shared:
              - 'src/shared/**'
            app:
              - 'src/app/**'

      - name: Check if should run all tests
        id: check-run-all
        run: |
          if [[ "${{ steps.filter.outputs.shared }}" == "true" ]] || [[ "${{ steps.filter.outputs.app }}" == "true" ]]; then
            echo "run-all=true" >> $GITHUB_OUTPUT
          else
            echo "run-all=false" >> $GITHUB_OUTPUT
          fi

  # Run all tests when shared/app changes
  test-all:
    needs: detect-changes
    if: needs.detect-changes.outputs.run-all == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9.9.0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run all E2E tests
        run: pnpm test:e2e:with-server

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-all
          path: reports/
          retention-days: 7

  # Run module-specific tests
  test-modules:
    needs: detect-changes
    if: needs.detect-changes.outputs.run-all != 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: color-theme
            condition: ${{ needs.detect-changes.outputs.color-theme == 'true' }}
            features: 'tests/features/color.feature tests/features/theme.feature'
          - module: documents
            condition: ${{ needs.detect-changes.outputs.documents == 'true' }}
            features: 'tests/features/documents.feature tests/features/document-persistence.feature'
          - module: editor
            condition: ${{ needs.detect-changes.outputs.editor == 'true' }}
            features: 'tests/features/editing.feature tests/features/scroll-sync.feature tests/features/smoke.test.feature'
          - module: markdown-preview
            condition: ${{ needs.detect-changes.outputs.markdown-preview == 'true' }}
            features: 'tests/features/editing.feature tests/features/scroll-sync.feature tests/features/smoke.test.feature'
          - module: share
            condition: ${{ needs.detect-changes.outputs.share == 'true' }}
            features: 'tests/features/sharing.feature'
          - module: layout
            condition: ${{ needs.detect-changes.outputs.layout == 'true' }}
            features: 'tests/features/scroll-sync.feature tests/features/smoke.test.feature'
          - module: shortcuts
            condition: ${{ needs.detect-changes.outputs.shortcuts == 'true' }}
            features: 'tests/features/smoke.test.feature'
          - module: core
            condition: ${{ needs.detect-changes.outputs.core == 'true' }}
            features: 'tests/features/smoke.test.feature'

    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.condition == 'true' }}

      - uses: pnpm/action-setup@v4
        if: ${{ matrix.condition == 'true' }}
        with:
          version: 9.9.0

      - uses: actions/setup-node@v4
        if: ${{ matrix.condition == 'true' }}
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        if: ${{ matrix.condition == 'true' }}
        run: pnpm install

      - name: Install Playwright browsers
        if: ${{ matrix.condition == 'true' }}
        run: pnpm exec playwright install --with-deps chromium

      - name: Start dev server
        if: ${{ matrix.condition == 'true' }}
        run: pnpm dev &

      - name: Wait for dev server
        if: ${{ matrix.condition == 'true' }}
        run: npx wait-on http://localhost:3000 --timeout 30000

      - name: Run module tests
        if: ${{ matrix.condition == 'true' }}
        run: NODE_OPTIONS='--loader ts-node/esm' pnpm exec cucumber-js ${{ matrix.features }}

      - name: Upload test report
        if: always() && matrix.condition == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ matrix.module }}
          path: reports/
          retention-days: 7
