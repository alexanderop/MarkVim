name: PNPM install with cache
description: Run pnpm install with optimized cache enabled

inputs:
  cwd:
    description: Working directory for pnpm install
    required: false
    default: .
  frozen-lockfile:
    description: Use frozen lockfile
    required: false
    default: 'true'
  cache-playwright:
    description: Cache Playwright browsers
    required: false
    default: 'false'
  node-version:
    description: Node.js version
    required: false
    default: '22'
  pnpm-version:
    description: pnpm version
    required: false
    default: 9.9.0

runs:
  using: composite

  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: pnpm

    - name: Expose pnpm config
      id: pnpm-config
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        echo "YEAR_MONTH=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

    - name: Cache rotation keys
      id: cache-rotation
      shell: bash
      run: |
        echo "YEAR_MONTH=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

    - name: Get Playwright version
      if: inputs.cache-playwright == 'true'
      id: playwright-version
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: echo "version=$(pnpm list @playwright/test --depth=0 --parseable 2>/dev/null | sed 's/.*@//' | tr -d '\n' || echo 'none')" >> $GITHUB_OUTPUT

    - name: Cache Playwright browsers
      if: inputs.cache-playwright == 'true' && steps.playwright-version.outputs.version != 'none'
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        if [ "${{ inputs.frozen-lockfile }}" = "true" ]; then
          pnpm install --frozen-lockfile --prefer-offline
        else
          pnpm install --prefer-offline
        fi
      env:
        HUSKY: '0'
